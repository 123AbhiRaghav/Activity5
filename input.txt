1. Window:
 The window object in javascript represents a browser window. It is the global object in javascript and contains
 all the global variables,functions and objects in the browser.
 ->The window object provides access to the browser's window and it's properties. It also provides methods to interact 
   with the browser,such as, opening and closing windows, navigating to different pages and displaying messages.
 ->The window object is automatically created by the browser and is available to all javascript code. It can be 
   accessed using the window keyword.

Properties of window object:
->document: document object of current window.
->location: location object of current window.
->history: history object of current window.
->screen: screen object of current window.
->navigator: navigator object of current window.

Methods of window object:
->window.alert(): displays an alert dialog box.
->window.confirm(): displays a confirm dialog box.
->window.prompt(): displaya a prompt dialog box.
->window.open(): opens a new window.
->window.close(): close the current window.
->window.navigate(): navigates to different page.

The window object is a powerful tool that can be used to interact with the browser and its contents.
Window object is supported by all browsers.

->Even the document object(of the HTML DOM)is a property of window object:
 window.document.getElementNyId("header)

2. Screen:
 The javascript screen object is a read-only object that provides information about the user's screen.
  It can be used to get the screen's width,height,color,depth and other properties. Also can be used to 
  create applications that are responsive to user's device.

Properties of screen object:
->height: height of the screen in pixels.
->width: width of screen in pixels.
->pixelDepth: number of bits used to represent each pixel on screen.
->availHeight: height of the screen in pixels, excluding windows taskbar.

Example to use screen object:
  const screen = window.screen;
  console.log(screen.width);
  console.log(screen.height);
  console.log(screen.colorDepth);

 The screen object can also be used to get information about user's orientation.The orientation property
  returns screen orientation object, which contains information about screen's current orientation.
   Example: 
      const orientation = screen.orientation;
      console.log(orientation.type);

3. Document: 
  The Document interface represents any web page loaded in the browser and serves as an entry point into the 
  web page's content, which is the DOM tree.

 The DOM tree includes elements such as <body> and <table>, among many others. It provides functionality globally 
 to the document, like how to obtain the page's URL and create new elements in the document.

 The Document interface describes the common properties and methods for any kind of document. Depending on the document's 
 type (e.g. HTML, XML, SVG, â€¦), a larger API is available: HTML documents, served with the "text/html" content type, also 
 implement the HTMLDocument interface, whereas XML and SVG documents implement the XMLDocument interface

 The Document interface for HTML documents inherits from the HTMLDocument interface or is extended for such documents.

Properties of document:
->Document.cookie
Returns a semicolon-separated list of the cookies for that document or sets a single cookie.

->Document.defaultView Read only
Returns a reference to the window object.

->Document.designMode
Gets/sets the ability to edit the whole document.

->Document.dir
Gets/sets directionality (rtl/ltr) of the document.

->Document.fullscreenEnabled Read only
Indicates whether fullscreen mode is available.

->Document.lastModified Read only
Returns the date on which the document was last modified.

->Document.location Read only
Returns the URI of the current document.